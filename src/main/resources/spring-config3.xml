<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
							http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
							http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd 
							http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<context:property-placeholder location="classpath:jdbc.properties"/>

	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<property name="driverClassName" value="${driverClassName}" />
		<property name="jdbcUrl" value="${jdbcUrl}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
	</bean>

	<bean id = "accountDao" class = "cn.tamilin.transaction.demo3.dao.AccountDaoImpl">
			<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id = "accountService" class = "cn.tamilin.transaction.demo3.service.AccountServicesImpl">
			<property name="accountDao" ref="accountDao" />
			<property name="transactionTemplate" ref = "transactionTemplate" ></property>
	</bean>

	<bean id = "transactionManager" class = "org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref = "dataSource"/>
	</bean>

	<!-- 事务通知:(事务的增强) -->
	<tx:advice id = "txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 
				* propagation		:事务的传播行为
				* isolation			：事务隔离级别
				* read-only			:只读
				* rollback-for		：发生哪些异常回滚
				* no-rollback-for	:发生哪些异常不回滚
				* timeout			:过期信息
			 -->
			<tx:method name="transfer" propagation="REQUIRED"/>
			<!-- tx:method name="transfer" propagation="REQUIRED" isolation="DEFAULT" read-only="false" timeout="-1" no-rollback-for=""/ -->
		</tx:attributes>
	</tx:advice>

	<!-- 配置切面 -->
	<aop:config>
		<!-- 
			* execution(modifiers-pattern? ret-type-pattern declaring-type-pattern? name-pattern(param-pattern)throws-pattern?)
				* returning type pattern,name pattern, and parameters pattern是必须的.
				* ret-type-pattern:可以为*表示任何返回值,全路径的类名等.
				* name-pattern:指定方法名,*代表所以,set*,代表以set开头的所有方法.
				* parameters pattern:指定方法参数(声明的类型),(..)代表所有参数,(*)代表一个参数,(*,String)代表第一个参数为任何值,第二个为String类型.
		 -->
		<aop:pointcut expression="execution(* cn.tamilin.transaction.demo3.service.AccountServices.*(..))" id="pointcut1"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref = "pointcut1"/>
	</aop:config>
</beans>
